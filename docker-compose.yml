services:
  redis:
    build:
      context: .
      dockerfile: Dockerfile.redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 30s

  postgres:
    build:
      context: .
      dockerfile: Dockerfile.postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  airflow-init:
    image: apache/airflow:2.9.0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres:5432/airflow      
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        airflow db migrate &&
        airflow users list | grep -q admin || airflow users create --username admin --password admin --firstname Admin --lastname User --role Admin --email admin@example.com || true
    healthcheck:
      test: ["CMD-SHELL", "airflow db check"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 60s

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile.airflow1
    restart: always
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres:5432/airflow
      AIRFLOW__WEBSERVER__WEB_SERVER_MASTER_TIMEOUT: "60"
      AIRFLOW__WEBSERVER__WEB_SERVER_WORKER_TIMEOUT: "60"
      AIRFLOW__WEBSERVER__ALLOW_TRIGGER_UI: "true"  # Bật Trigger DAG UI Form
    ports:
      - "8080:8080"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - shared_data:/tmp/
      - ./shared/airflow.cfg:/opt/airflow/airflow.cfg
    command: >
      bash -c "test -f /opt/airflow/shared/airflow.cfg || airflow config list > /opt/airflow/shared/airflow.cfg; exec airflow webserver"
    
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://localhost:8080/health"]
      interval: 120s
      timeout: 60s
      retries: 5
      start_period: 300s

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile.airflow2
    restart: always
    depends_on:
      airflow-webserver:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CELERY__WORKER_CONCURRENCY: "1"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - shared_data:/tmp/
      - ./shared/airflow.cfg:/opt/airflow/airflow.cfg  # Mount file vào đúng vị trí
    command: airflow scheduler
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://airflow-webserver:8080/health | grep -q '\"status\": \"healthy\"' || exit 1"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 120s

  airflow-worker-1:
    hostname: airflow-worker-1
    build:
      context: .
      dockerfile: Dockerfile.airflow2
    restart: always
    depends_on:
      airflow-scheduler:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CELERY__WORKER_CONCURRENCY: "1"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - shared_data:/tmp/
      - ./shared/airflow.cfg:/opt/airflow/airflow.cfg  # Mount file vào đúng vị trí
    command: airflow celery worker
    healthcheck:
      test: ["CMD-SHELL", "celery --app airflow.executors.celery_executor.app inspect ping -d celery@$(hostname)"]
      interval: 60s
      timeout: 60s
      retries: 5
      start_period: 90s

  airflow-worker-2:
    hostname: airflow-worker-2
    build:
      context: .
      dockerfile: Dockerfile.airflow2
    restart: always
    depends_on:
      airflow-scheduler:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CELERY__BROKER_URL: redis://redis:6379/0
      AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CELERY__WORKER_CONCURRENCY: "1"
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - shared_data:/tmp/
      - ./shared/airflow.cfg:/opt/airflow/airflow.cfg  # Mount file vào đúng vị trí
    command: airflow celery worker
    healthcheck:
      test: ["CMD-SHELL", "celery --app airflow.executors.celery_executor.app inspect ping -d celery@$(hostname)"]
      interval: 60s
      timeout: 60s
      retries: 5
      start_period: 90s

  oracle:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    environment:
      ORACLE_PWD: Oracle123
      ORACLE_CHARACTERSET: AL32UTF8
    ports:
      - "1521:1521"
      - "5500:5500"
    volumes:
      - oracle_data:/opt/oracle/oradata
      - ./oracle/setup:/opt/oracle/scripts/setup
      - ./oracle/startup:/opt/oracle/scripts/startup
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "sys/Oracle123@//localhost:1521/XE as sysdba", "@healthcheck.sql"]
      interval: 60s
      timeout: 30s
      retries: 10
      start_period: 120s

volumes:
  postgres_data:
  shared_data:
  oracle_data: